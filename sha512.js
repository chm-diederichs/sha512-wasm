
module.exports = loadWebAssembly

loadWebAssembly.supported = typeof WebAssembly !== 'undefined'

function loadWebAssembly (opts) {
  if (!loadWebAssembly.supported) return null

  var imp = opts && opts.imports
  var wasm = toUint8Array('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')
  var ready = null

  var mod = {
    buffer: wasm,
    memory: null,
    exports: null,
    realloc: realloc,
    onload: onload
  }

  onload(function () {})

  return mod

  function realloc (size) {
    mod.exports.memory.grow(Math.max(0, Math.ceil(Math.abs(size - mod.memory.length) / 65536)))
    mod.memory = new Uint8Array(mod.exports.memory.buffer)
  }

  function onload (cb) {
    if (mod.exports) return cb()

    if (ready) {
      ready.then(cb.bind(null, null)).catch(cb)
      return
    }

    try {
      if (opts && opts.async) throw new Error('async')
      setup({instance: new WebAssembly.Instance(new WebAssembly.Module(wasm), imp)})
    } catch (err) {
      ready = WebAssembly.instantiate(wasm, imp).then(setup)
    }

    onload(cb)
  }

  function setup (w) {
    mod.exports = w.instance.exports
    mod.memory = mod.exports.memory && mod.exports.memory.buffer && new Uint8Array(mod.exports.memory.buffer)
  }
}

function toUint8Array (s) {
  if (typeof atob === 'function') return new Uint8Array(atob(s).split('').map(charCodeAt))
  return (require('buf' + 'fer').Buffer).from(s, 'base64')
}

function charCodeAt (c) {
  return c.charCodeAt(0)
}
